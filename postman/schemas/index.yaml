openapi: '3.0.0'
info:
  version: '0.1.0'
  title: 'Xena OpenAutomation ANLT Experiment API'
  description: Experiment API for ANLT includining managing test resources and controlling tests

servers:
  - url: 'localhost'

paths:
  /api/{{api_version}}:
    parameters:
      - name: api_version
        description: API version
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/APIVersion'
    get:
      summary: Get node information
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeInfo'

  /api/{{api_version}}/ping:
    parameters:
      - name: api_version
        description: API version
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/APIVersion'
    get:
      summary: Ping the node
      responses:
        '200':
          description: Pong from the node
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PongInfo'
  /api/{{api_version}}/testers:
    parameters:
      - name: api_version
        description: API version
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/APIVersion'
    get:
      summary: List testers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TesterList'
    post:
      summary: Add tester
      responses:
        '201':
          description: Tester Added
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TesterId'
        '202':
          description: Tester Already Added
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TesterId'
        '422':
          description: Bad tester info
  /api/{{api_version}}/testers/{{tester_id}}:
    parameters:
      - name: api_version
        description: API version
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/APIVersion'
      - name: tester_id
        description: Tester identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TesterId'
    delete:
      summary: Remove tester
      responses:
        '200':
          description: OK
  /api/{{api_version}}/testers/{{tester_id}}/control:
    parameters:
      - name: api_version
        description: API version
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/APIVersion'
      - name: tester_id
        description: Tester identifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TesterId'
    post:
      summary: Connect to an added tester
      responses:
        '200':
          description: Connection OK
    delete:
      summary: Disconnect a tester
      responses:
        '200':
          description: Disconnection OK
    patch:
      summary: Configure a tester
      responses:
        '200':
          description: 'Successfully configured the tester'
      requestBody:
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/TesterObject'
  /api/{{api_version}}/test:
    parameters:
      - name: api_version
        description: API version
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/APIVersion'
    post:
      summary: Start test
      responses:
        '200':
          description: Test is started
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestId'
      requestBody:
        content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TestConfig'
    delete:
      summary: Stop test
      responses:
        '200':
          description: Test is stopped
    patch:
      summary: Pause test
      responses:
        '200':
          description: Test is paused
  /api/{{api_version}}/subscribe/resources:
    parameters:
      - name: api_version
        description: API version
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/APIVersion'
    post:
      summary: Subscribe to Test Resource Status
      responses:
        '201':
          description: Successfully subscribed to test resource status change
      requestBody:
        content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SubscriptionInfo'


components:
  schemas:
    APIVersion:
      description: API version
      type: string
      default: 'v1'
      example: 'v1'
    NodeId:
      description: The unique identifier of a XOA Node
      type: string
      format: uuid
      example: '687a4224-1a6b-4144-bb17-ee73d37298c0'
    WorkerId:
      description: The unique identifier of a XOA Worker
      type: string
      format: uuid
      example: '687a4224-1a6b-4144-bb17-ee73d37298c0'
    SenderId:
      description: The unique identifier of the API sender
      type: string
      format: uuid
      example: '687a4224-1a6b-4144-bb17-ee73d37298c1'
    TesterId:
      description: Unique identifier of a tester
      type: string
      format: uuid
      example: '598e592ceb28ce73b95d270a1b028ff3'
    ModuleId:
      description: Unique identifier of a module on a tester by appending the module index to the tester id
      type: string
      example: '598e592ceb28ce73b95d270a1b028ff3-0'
    PortId:
      description: Unique identifier of a port by appending the module index and port index to the tester id
      type: string
      example: '598e592ceb28ce73b95d270a1b028ff3-0-0'
    TestId:
      description: The unique identifier of a test
      type: string
      format: uuid
      example: '88d683e1-0ee5-482d-869c-62d98800acd1'
    NodeInfo:
      type: object
      required:
        - nid
        - name
      properties:
        nid:
          $ref: '#/components/schemas/NodeId'
        name:
          description: The name of the XOA Node
          type: string
          example: 'XOA Node'
    PongInfo:
      type: object
      required:
        - pong
        - timestamp
      properties:
        pong:
          $ref: '#/components/schemas/NodeId'
        timestamp:
          description: Timestamp of the response
          type: string
          format: date-time
          example: '2022-12-08T23:42:31.947237'
    ProductType:
      description: Product type of the tester
      type: integer
      minimum: 1
      maximum: 5
    TesterLoginCredential:
      type: object
      required:
        - product
        - host
        - password
        - port
      properties:
        product:
          $ref: '#/components/schemas/ProductType'
        host:
          description: Address of the tester
          type: string
          format: ipv4, ipv6, url
          example: '87.61.110.114'
        password:
          description: Login password of the tester
          type: string
          format: password
          default: 'xena'
          example: 'xena'
        port:
          description: Tester's TCP port for the XOA Node to connect to
          type: integer
          default: 22606
          example: 22606
    ServiceType:
      type: string
      enum:
        - alerts
        - resources
    SubscriptionInfo:
      type: object
      properties:
        worker_id:
          $ref: '#/components/schemas/WorkerId'
        sender_id:
          $ref: '#/components/schemas/SenderId'
        service_name:
          $ref: '#/components/schemas/ServiceType'
        destination:
          description: The URL of the endpoint to receive the push messages
          type: string
          format: url
          example: 'https://fb3c8b2e-b22f-47aa-8122-15d635ab6d0d.mock.pstmn.io/temp'
    TesterObject:
      type: object
      allOf:
          - $ref: '#/components/schemas/TesterLoginCredential'
      properties:
        id:
          $ref: '#/components/schemas/TesterId'
        name:
          description: Name of the tester
          type: string
        reserved_by:
          description: Reservation ownership of the tester
          type: string
        is_connected:
          description: If the XOA Worker is connected to the tester
          type: boolean
        modules:
          description: Tester's modules
          type: array
          items:
            $ref: '#/components/schemas/ModuleObject'
        keep_disconnected:
          description: Should the Worker keep the tester disconnected after reboot
          type: boolean
        max_name_len:
          description: Maximum length of the tester name allowed
          type: integer
        max_comment_len:
          description: Maximum length of the tester description allowed
          type: integer
        max_password_len:
          description: Maximum length of the tester password allowed
          type: integer
    ModuleObject:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ModuleId'
        index:
          description: Index of the module
          type: integer
        model:
          description: Module's model
          type: string
        reserved_by:
          description: Module's reservation ownership
          type: string
        ports:
          description: Module's ports
          type: array
          items:
            $ref: '#/components/schemas/PortObject'
        name:
          description: Name of the module
          type: string
        can_media_config:
          description: Does the module supports media configuration?
          type: boolean
        is_chimera:
          description: Is it a Chimera module
          type: boolean
        can_local_time_adjust:
          description: Does the module support local time adjustment?
          type: boolean
        max_clock_ppm:
          description: Maximum ppm allowed for clock adjustment
          type: integer
    PortObject:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/PortId'
        index:
          type: integer
        model:
          type: string
        reserved_by:
          type: string
        sync_status:
          type: integer
        traffic_state:
          type: integer
        max_speed:
          type: integer
        max_speed_reduction:
          type: integer
        min_interframe_gap:
          type: integer
        max_interframe_gap:
          type: integer
        max_streams_per_port:
          type: integer
        packet_limit:
          type: integer
        min_packet_length:
          type: integer
        max_packet_length:
          type: integer
        max_header_length:
          type: integer
        max_protocol_segments:
          type: integer
        max_repeat:
          type: integer
        can_set_autoneg:
          type: boolean
        can_tcp_checksum:
          type: boolean
        can_udp_checksum:
          type: boolean
        can_micro_tpld:
          type: boolean
        can_mdi_mdix:
          type: boolean
        can_sync_traffic_start:
          type: boolean
        can_fec:
          type: boolean
        can_anlt:
          type: boolean
        is_chimera:
          type: boolean
        can_brr:
          type: boolean
        speed_modes_supported:
          type: array
          items:
            $ref: '#/components/schemas/SpeedModeObject'
        speed_mode_current:
          type: integer
        speed_current:
          type: integer
        speed_reduction:
          type: integer
    SpeedModeObject:
      type: integer
      minimum: 0
      maximum: 255
    PortsList:
      description: List of ports on a module
      type: array
      items:
        $ref: '#/components/schemas/PortObject'
    ModuleList:
      description: List of modules on a tester
      type: array
      items:
        $ref: '#/components/schemas/ModuleObject'
    TesterList:
      description: List of testers
      type: array
      items:
        $ref: '#/components/schemas/TesterObject'
    HelloWorldTestConfig:
      description: Configuration of the "Hello World" ANLT test
      type: object
      properties:
        username:
          description: Username
          type: string
          example: 'OpenAutomation'
        test_name:
          description: Name of the test that this confiugration is for
          type: string
          example: 'ANLT'
        destination:
          description: The URL of the endpoint for the Worker to send statistics, alerts, notifications, etc.
          type: string
          format: url
          example: 'https://fb3c8b2e-b22f-47aa-8122-15d635ab6d0d.mock.pstmn.io/temp'
        port_identities:
          description: List of ports that this test will reserve and use
          type: array
          items:
            $ref: '#/components/schemas/PortIdentityObject'
        config:
          type: object
          properties:
            dummy:
              type: string
              example: 'Hello World'
    PortIdentityObject:
      type: object
      properties:
        tester_id:
          $ref: '#/components/schemas/TesterId'
        tester_index:
          type: integer
        module:index:
          type: integer
        port_index:
          type: integer


security:
  - ApiKey: []